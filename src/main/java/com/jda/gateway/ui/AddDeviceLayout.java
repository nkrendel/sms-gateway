package com.jda.gateway.ui;

import javax.persistence.EntityManager;

import com.jda.gateway.persistence.Handset;
import com.jda.gateway.persistence.HandsetStatus;
import com.vaadin.addon.jpacontainer.JPAContainerFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.UserError;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;

public class AddDeviceLayout extends CustomComponent {

  /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

  @AutoGenerated
  private FormLayout mainLayout;

  @AutoGenerated
  private Label feedbackLabel;

  @AutoGenerated
  private Button addButton;

  @AutoGenerated
  private TextArea publicKeyField;

  @AutoGenerated
  private TextField deviceIdField;

  private static final long serialVersionUID = 4745131959366986168L;

  /**
   * The constructor should first build the main layout, set the
   * composition root and then do any custom initialization.
   *
   * The constructor will not be automatically regenerated by the
   * visual editor.
   */
  @SuppressWarnings("serial")
  public AddDeviceLayout() {
    buildMainLayout();
    setCompositionRoot(mainLayout);

    feedbackLabel.setValue("");

    // add a button click listener
    addButton.addClickListener(new Button.ClickListener() {

      @Override
      public void buttonClick(ClickEvent event) {
        final String deviceId = deviceIdField.getValue();
        final String publicKey = publicKeyField.getValue();

        if (deviceId == null || deviceId.length() < 1) {
           addButton.setComponentError(new UserError("Please enter a device id."));
           return;
        }
        
        if (deviceId.length() > 15) {
          addButton.setComponentError(new UserError("Device ID can't be longer than 15 characters."));
          return;
        }

        // Get an entity manager
        final EntityManager em = 
            JPAContainerFactory.createEntityManagerForPersistenceUnit(SMSGateway.PERSISTENCE_UNIT);

        // create, populate, and persist the new Person
        em.getTransaction().begin();
        Handset h = new Handset();
        h.setDeviceId(deviceId);
        h.setPublicKey(publicKey.getBytes());
        h.setStatus(HandsetStatus.getByStatus(HandsetStatus.STATUS_UNLOCKED));
        em.persist(h);
        em.getTransaction().commit();

        addButton.setComponentError(null);
        deviceIdField.setValue("");
        publicKeyField.setValue("");
        feedbackLabel.setValue("Added " + h.getId() + " / " + h.getDeviceId() + ".");
      }

    });
  }

  public void clearValues() {
    deviceIdField.setValue("");
    publicKeyField.setValue("");
    feedbackLabel.setValue("");
    addButton.setComponentError(null);
  }

  @AutoGenerated
  private FormLayout buildMainLayout() {
    // common part: create layout
    mainLayout = new FormLayout();
    mainLayout.setImmediate(false);
    mainLayout.setWidth("100%");
    mainLayout.setHeight("100%");
    mainLayout.setMargin(true);
    mainLayout.setSpacing(true);
    
    // top-level component properties
    setWidth("100.0%");
    setHeight("100.0%");
    
    // deviceIdField
    deviceIdField = new TextField();
    deviceIdField.setCaption("Device ID:");
    deviceIdField.setImmediate(false);
    deviceIdField.setWidth("200px");
    deviceIdField.setHeight("25px");
    mainLayout.addComponent(deviceIdField);
    
    // publicKeyField
    publicKeyField = new TextArea();
    publicKeyField.setCaption("Public Key:");
    publicKeyField.setImmediate(false);
    publicKeyField.setWidth("200px");
    publicKeyField.setHeight("-1px");
    mainLayout.addComponent(publicKeyField);
    
    // addButton
    addButton = new Button();
    addButton.setCaption("Add Device");
    addButton.setImmediate(true);
    addButton.setWidth("-1px");
    addButton.setHeight("-1px");
    mainLayout.addComponent(addButton);
    mainLayout.setComponentAlignment(addButton, new Alignment(10));
    
    // feedbackLabel
    feedbackLabel = new Label();
    feedbackLabel.setImmediate(false);
    feedbackLabel.setWidth("200px");
    feedbackLabel.setHeight("25px");
    feedbackLabel.setValue("Label");
    mainLayout.addComponent(feedbackLabel);
    
    return mainLayout;
  }

}
